datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id            Int                @id @default(autoincrement())
  name          String
  description   String?
  price         Float
  sku           String?            @unique
  stockQuantity Int
  imageUrl      String?
  status        ProductStatus      @default(active)
  category      Category           @relation(fields: [categoryId], references: [id])
  categoryId    Int
  brand         Brand              @relation(fields: [brandId], references: [id])
  brandId       Int
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  variations    ProductVariation[]
  images        ProductImage[]
  reviews       ProductReview[]
  discounts     ProductDiscount[]
  interactions  ProductInteraction[]
}

model Category {
  id            Int        @id @default(autoincrement())
  name          String
  parentId      Int?
  parent        Category?  @relation("CategoryParent", fields: [parentId], references: [id])
  subCategories Category[] @relation("CategoryParent")
  products      Product[]
  createdAt     DateTime   @default(now())
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
}

model ProductVariation {
  id              Int     @id @default(autoincrement())
  product         Product @relation(fields: [productId], references: [id])
  productId       Int
  variationType   String
  variationValue  String
  additionalPrice Float?
  stockQuantity   Int
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  imageUrl  String
  isPrimary Boolean @default(false)
}

model ProductReview {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  rating    Int      
  review    String?
  createdAt DateTime @default(now())
}

model ProductDiscount {
  id            Int          @id @default(autoincrement())
  product       Product      @relation(fields: [productId], references: [id])
  productId     Int
  discountType  DiscountType
  discountValue Float
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime     @default(now())
}

model ProductInteraction {
  id                Int                @id @default(autoincrement())
  productId         Int
  interactionType   InteractionType
  userId            Int?               // Optional, jika ada sistem pengguna
  ipAddress         String?            // Optional, untuk pelacakan lokasi atau perangkat
  createdAt         DateTime           @default(now())
  product           Product            @relation(fields: [productId], references: [id])

  @@index([productId, interactionType])
}

enum InteractionType {
  view
  add_to_cart
  purchase
}



enum ProductStatus {
  active
  inactive
  discontinued
}

enum DiscountType {
  percentage
  fixed
}
